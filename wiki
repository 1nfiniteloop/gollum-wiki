#!/bin/bash

# Configuration
readonly DOCKER_IMAGE="1nfiniteloop/gollum-wiki:latest"
readonly DOCKER_ENV_FILE=~/.gollum-wiki.env


function err() {
    local error_msg=$1
    >&2 echo -e "ERROR: ${error_msg}"
}

function docker_args_env_file() {
    local env_file=$1
    [ -e ${env_file} ] && \
        echo "--env-file=${env_file}" && \
        true
    return 
}

function docker_args_env() {
    local status=0
    local args=()
    [ -n "${GITCONFIG_USER_NAME}" ] && \
        args+=("--env GITCONFIG_USER_NAME") || \
        { err "GITCONFIG_USER_NAME undefined, define in \"${DOCKER_ENV_FILE}\" or manually e.g: \n\n\texport GITCONFIG_USER_NAME=\"Your name\"\n" && \
        status=1; }
    [ -n "${GITCONFIG_USER_EMAIL}" ] && \
        args+=("--env GITCONFIG_USER_EMAIL") || \
        { err "GITCONFIG_USER_EMAIL undefined, define in \"${DOCKER_ENV_FILE}\" or manually e.g: \n\n\texport GITCONFIG_USER_EMAIL=\"your.email@example.com\"\n" && \
        status=1; }
    echo "${args[@]}"
    return ${status}
}

function start_gollum_with_docker() {
    local wiki_name=$1
    local wiki_path=$2
    local wiki_port=$3
    local wiki_docker_image=$4
    declare -a wiki_docker_args=("${!5}")
    declare -a wiki_gollum_args=("${!6}")
    eval "docker run \
        --rm \
        --detach \
        --user=$(id -u):$(id -g) \
        --name=${wiki_name} \
        --volume='${wiki_path}':/mnt/wiki \
        --publish=${wiki_port}:8080 \
        ${wiki_docker_args[@]} ${wiki_docker_image} ${wiki_gollum_args[@]} > /dev/null"
    return
}

function find_free_port() {
    local port_min=$1
    local port_max=$2
    local port=${port_min}
    while (ss -ltn | grep -q ${port}) && ((port < port_max)); do
        ((port++))
    done
    echo ${port}
}

function print_success() {
    local wiki_name=$1
    local wiki_addr=$2
    echo -e "\n\tStarted \"${wiki_name}\" @ ${wiki_addr}\n" \
            "\tStop with \"docker stop ${wiki_name}\"\n"
}

function open_wiki_in_browser() {
    local wiki_addr=$1
    sleep 1 && \
        xdg-open ${wiki_addr} &> /dev/null
}

# Default values
DOCKER_EXTRA_ARGS=()
GOLLUM_EXTRA_ARGS=()

POSITIONAL=()
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        --docker-args)
        DOCKER_EXTRA_ARGS+=("$2")
        shift
        shift
        ;;
        --gollum-args)
        GOLLUM_EXTRA_ARGS+=("$2")
        shift
        shift
        ;;
        *)    # unknown option
        POSITIONAL+=("$1")
        shift
        ;;
    esac
done

set -- "${POSITIONAL[@]}"


readonly WIKI_PATH=$(readlink -m $1)
readonly WIKI_NAME=$(basename "${WIKI_PATH}")
readonly WIKI_HOSTNAME="localhost"
readonly WIKI_PROTOCOL="http://"
readonly WIKI_PORT_MIN=4567
readonly WIKI_PORT_MAX=4600
readonly WIKI_PORT=$(find_free_port ${WIKI_PORT_MIN} ${WIKI_PORT_MAX})
readonly WIKI_ADDR="${WIKI_PROTOCOL}${WIKI_HOSTNAME}:${WIKI_PORT}"


if [[ ! $(which docker) ]]; then
    err "Docker is not installed."
    exit 1
elif [[ $# -ne 1 ]]; then
    echo -e "\n\tUsage: $(basename $0) [--docker-args <ARGS>] [--gollum-args <ARGS>] <PATH-TO-WIKI>\n"
    exit 1
elif [[ ! -e "${1}" ]]; then
    err "Wiki path ${1} does not exist!"
    exit 1
else
    DOCKER_ARGS+=("${DOCKER_EXTRA_ARGS} $(docker_args_env_file ${DOCKER_ENV_FILE} || docker_args_env)")
    start_gollum_with_docker \
        ${WIKI_NAME} \
        "${WIKI_PATH}" \
        ${WIKI_PORT} \
        ${DOCKER_IMAGE} \
        DOCKER_ARGS[@] \
        GOLLUM_EXTRA_ARGS[@] \
    && print_success ${WIKI_NAME} ${WIKI_ADDR} \
    && open_wiki_in_browser ${WIKI_ADDR}
fi
